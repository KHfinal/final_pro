<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="post">
	<insert id="insertPost" parameterType="post">
		INSERT INTO POST(POST_NO, POST_WRITER, POST_CONTENTS, PRIVACY_BOUND, POST_DATE)
		VALUES(seq_post_no.nextval, #{postWriter}, #{postContents}, #{privacyBound}, systimestamp)
		<selectKey keyProperty="postNo" resultType="_int" order="AFTER">
			SELECT SEQ_POST_NO.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="insertAttach" parameterType="attach">
		INSERT INTO ATTACHMENT(ATTACHMENT_NO, POST_NO, ORIGINAL_FILENAME, RENAMED_FILENAME, UPLOAD_DATE)
		VALUES(seq_attachment_no.nextval, #{postNo}, #{originalFileName}, #{renamedFileName}, systimestamp)
	</insert>
	
	<select id="selectPostList" resultType="post" resultMap="postMap">
		SELECT * FROM POST ORDER BY POST_DATE DESC
	</select>
	
	<select id="selectAttachList" parameterType="attach" resultType="attach" resultMap="attachMap">
		SELECT * FROM ATTACHMENT ORDER BY ATTACHMENT_NO ASC
	</select>
	
	<!-- 댓글 -->
	<insert id="insertComment" parameterType="comment">
		INSERT INTO JARVIS_COMMENT(COMMENT_NO, COMMENT_WRITER, COMMENT_CONTENTS, COMMENT_LEVEL, POST_REF, COMMENT_REF, COMMENT_DATE)
		VALUES(seq_comment_no.nextval, #{commentWriter}, #{commentContents}, #{commentLevel}, #{postRef}, ${commentRef}, systimestamp)
	</insert>
	
	<select id="selectCommentList" resultType="comment" resultMap="commentMap">
		SELECT * FROM JARVIS_COMMENT ORDER BY COMMENT_DATE ASC
	</select>
	
	<!-- 좋아요 등록 및 조회 -->
	<insert id="insertPostLike" parameterType="like">
		INSERT INTO JARVIS_LIKE(LIKE_NO, LIKE_MEMBER, POST_REF, LIKE_CHECK)
		VALUES(seq_like_no.nextval, #{likeMember}, #{postRef}, #{likeCheck})
	</insert>
	
	<insert id="insertCommentLike" parameterType="like">
		INSERT INTO JARVIS_LIKE(LIKE_NO, LIKE_MEMBER, POST_REF, COMMENT_REF, LIKE_CHECK)
		VALUES(seq_like_no.nextval, #{likeMember}, #{postRef}, #{commentRef}, #{likeCheck})
	</insert>
	
	<select id="selectPostLike" resultType="like" resultMap="likeMap">
		SELECT * FROM JARVIS_LIKE WHERE POST_REF = #{postRef}
	</select>
	
	<select id="selectCommentLike" resultType="like" resultMap="likeMap">
		SELECT * FROM JARVIS_LIKE WHERE COMMENT_REF = #{commentRef}
	</select>
	
	<!-- 좋아요 카운트 -->
	<select id="selectPostLikeCount" resultType="_int" parameterType="like">
		SELECT COUNT(*) FROM JARVIS_LIKE WHERE POST_REF = #{postRef} AND LIKE_CHECK = #{likeCheck}
	</select>
	
	<select id="selectCommentLikeCount" resultType="_int" parameterType="like">
		SELECT COUNT(*) FROM JARVIS_LIKE WHERE COMMENT_REF = #{commentRef} AND LIKE_CHECK = #{likeCheck}
	</select>
	
	<!-- 좋아요 삭제 및 조회 -->
	<delete id="deletePostLike" parameterType="like">
		DELETE FROM JARVIS_LIKE WHERE POST_REF = #{postRef} AND LIKE_MEMBER = #{likeMember} AND LIKE_CHECK = #{likeCheck}
	</delete>
	
	<delete id="deleteCommentLike" parameterType="like">
		DELETE FROM JARVIS_LIKE WHERE COMMENT_REF = #{commentRef} AND LIKE_MEMBER = #{likeMember} AND LIKE_CHECK = #{likeCheck}
	</delete>
	
	<!-- 최초 로그인시 count값 받기 위한 select -->
	<select id="startSelectLike" resultType="like" resultMap="likeMap">
		SELECT * FROM JARVIS_LIKE
	</select>
	
	
	
	
	
	<!-- Map을 이용할 때, resultMap사용. id는 xml안에서 태그를 불러올 변수명이다. -->
	<resultMap type="post" id="postMap">  
		<result column="post_no" property="postNo"/>
		<result column="post_writer" property="postWriter"/>
		<result column="post_contents" property="postContents"/>
		<result column="privacy_bound" property="privacyBound"/>
		<result column="post_date" property="postDate"/>
	</resultMap>
	
	<resultMap type="attach" id="attachMap">
		<result column="attachment_no" property="attachmentNo"/>
		<result column="post_no" property="postNo"/>
		<result column="original_filename" property="originalFileName"/>
		<result column="renamed_filename" property="renamedFileName"/>
		<result column="upload_date" property="uploadDate"/>
	</resultMap>
	
	<resultMap type="comment" id="commentMap">
		<result column="comment_no" property="commentNo"/>
		<result column="comment_writer" property="commentWriter"/>
		<result column="comment_contents" property="commentContents"/>
		<result column="comment_level" property="commentLevel"/>
		<result column="post_ref" property="postRef"/>
		<result column="comment_ref" property="commentRef"/>
		<result column="comment_date" property="commentDate"/>
	</resultMap>
	
	<resultMap type="like" id="likeMap">
		<result column="like_no" property="likeNo"/>
		<result column="like_member" property="likeMember"/>
		<result column="post_ref" property="postRef"/>
		<result column="comment_ref" property="commentRef"/>
		<result column="like_check" property="likeCheck"/>
	</resultMap> 
	
</mapper>
